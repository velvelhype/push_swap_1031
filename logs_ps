やる
-----------------------------------------------
型判別機の仕組み
まず桁数で弾く
文字数ではじく

多分int範囲問題はおk

次は０エラー、引数問題の解決を引き続き
-----------------------------------------------
int
-----------------------------------------------
-2,147,483,648
 2,147,483,647

-----------------------------------------------
long long
-----------------------------------------------
-9,223,372,036,854,775,808
 9,223,372,036,854,775,807
-----------------------------------------------

longlongまで対応できるようにする
-2,147,483,648だと11文字
10,000,000,0000みたいのだと12文字

まず文字数が１２文字以上だとはじく
次にintの範囲ではじく

型の内外ってどう反映すんの

-----------------------------------------------

ここにint外を外す、引数の処理をする
argvがintじゃないなら殺す
　めんどくせえな！　atoiを見直すか

0入ってくるとダメだな

while(*(argv + c))
{
    if(c == 1)
    {
        create(a_stack, a_dummy, ft_atoi(*(argv + c)));
        b_dummy_set(b_dummy);
    }
    else
        append(a_stack, a_dummy, ft_atoi(*(argv + c)));
    c++;
}
set_sort_status(a_dummy, b_dummy);



これは、いよいよクリエイトのリファクタリングだなw
エラー処理：
int 以外がきたら弾く
空ケース クリエイト段階でエラーが出てしまっている

前処理機
整列機、エラーチェックを作る
整列機
入力した値を並べます
最小の値が０です
次に大きい値が１

並べるやつ、別に大丈夫だな
じゃあいいや
エラーチェックやるか

エラー処理：
int 以外がきたら弾く
空ケース クリエイト段階でエラーが出てしまっている
---------------------------------------------------------------------
対応するところ
---------------------------------------------------------------------
　③手数を減らす
　エラーチェック、整列
 ②　数字の整列機を作る OK
１３、１９、３７４
だったら
１、２、３に変換
　①int外の数字、重複を外す
　④チェッカー作る
　⑤リークチェック 
　⑥ボーナス作る
---------------------------------------------------------------------
今できてること
---------------------------------------------------------------------
整理されている数字を与えられた時にソートできる
---------------------------------------------------------------------
他の人のと手数を比較

pdf見直した

ps、まずは整理
関数わけ、それと階層を浅くする

これからやること
１　３個以内の場合の処理
２　全探索の実装

完全逆順　{200..1}みたいな時にダメだな
ランダムならいけるかも？
行けたわw echoだとうまくいかないのなんでや
とりあえず今のでバッキングは混沌としているから
見やすくする
どこでstackを表示しているのかを見る
現状の把握
次に改良をしていく

何が起きてる？
一個チャンクの時に出し入れが永遠に行われいる気がする

やっぱ一個チャンクで詰まるなー

そろそろ最初から整理し直して、リファクタリングする時期や
仕分けるとことか分割出来るからやろう

init for sort　aを大小二分割　小をbに出荷
rec sort　bを2個以下になるまで、分割して大きい方のチャンクをaに出荷し続ける
2個以下になったらaの末尾に追加

チャンクをaから輸入

ステータス記号
cこれより下はチャンク
sこれより下はソート済みチャンク
uわからない

finishのやつが複数発生しててだめ
終了条件が適当なんだよね

チャンク認識
フィニッシュしたら新しいチャンクをaから持ってくる
その機能を作る

実装すること
：末尾をaに返す done
：スタック状況表示の改善 ?
まあ、多分できた
：チャンクをbに送るやつ ?
チャンク認識が微妙
出荷する時とかにタグをつける必要がある

コード、重複してないか？
aとbの違いは、スタックのはめ方だけ、うーん・・・

pivotの決め方による計算量の違い

たくさん遊んで覚えるしかない

pivotの決め方がおかしい

three_sortとかどうなってるんだw

結局アルゴリズムを手中におさめられていない
成長以外の目的で何かをやるのは邪悪
目的を目的にしては行けない

まず前整列、数字から、数字のランキングへと換算
それらから適切なpivotを導出

pivot以下の数字をbにプッシュ

結果だけではない　愛が全て

rotateすると、カレンとバリューが違っていますね　どうしましょうか

操作系が多分違ってるから描き直す

本流の設計を考える
pdf見て、資料見て、ノート書く

昨日のよりはいいけど、
１、０が混じる問題あるし依然に
２、終了条件がおかしい
このままスワップでのクイックソートを続けるか、本流実装を試すか
もう本流でいいかな

valueをintにしてみた　なんか影響ありそうだな

１、pivotを決める
２、0はどっからきたんだ？
３、実装再帰させる部分の実装

プッシュ

ばかなソートはできた

何やろうかな

https://programming-place.net/ppp/contents/algorithm/data_struct/005.html

ソート全然分かってなかった
基準値決めて左右に振るやつやってみる

１，readで止める　enter で一手ごと出せるようになる
２，まず入力を受け取って数字を割り振る奴やる
そうするとピボットが決まる
ピボットをもとに割り振る

改善するところ：
１、ファイルを分けるべき　hファイルを作る
=分けた　チェック関数群、動作関係群、メイン＋ソート動作関数群にした

２、raがポインタ返す仕様なのはかなり馬鹿げている気がしてきた
ダミーの位置はずらすべきではないのでカットをすればいい話なのではないのか
＝全てvoidにした

そもそもソート方法の実装をよく理解していない
でも手駒は出来てきた気がする

作り直すか

ソートで使った基準値=pipotを飛ばさないからループし続ける
だからだめなんだね

3つめまでを確定させてastackに追加するまでをやる
そのたまに二個ソートもかく

3つまではできた　からそこからの仕組みを考える

今のローテートの仕様だとダミーの位置が動くから
ra rraした時に外の関数から変更したダミーの位置を教えてもらわなければいけない

再起的なクイックソートを用意する
それと区別する
３以下になるまで飛ばし続ける

pbとpaが別じゃん　統一しろ
統一してたわ

どこまで回す始めるのか、どうやって回すのかが？

それじゃあクイックソートやり始めるか
引数を渡したらそれをbにプッシュ分類

操作する関数に一貫性なさすぎて考えるのがきつい
し理解度も足りていない

is_sortedできた

とりあえずの妄想
三手以内確定をやればできるんじゃないか？
時間とかを気にせずに作る

未来を見てからやるのってすっごいかっこいい
さすがsyamashi

とりあえず書いてみると楽しい

レシピをかく

三個以内の要素を配列するアルゴリズムをつくる
123 0
132 sa ra
231 rra

213 sa
312  ra
321 ra ra

紙に書いても一回頭実装してみる

やっぱりクイックソートを理解していない
もう一回見てみる　bスタックの整理方法がわかってない

実際に書いてやってみる

実装考え、
push_swapの最後尾の数字で対比し続け、下回ったのをbに飛ばす
bの最後尾で対比を繰り返し、ここがわからん

https://note.com/syamashi/n/n602158ffc662

動作の実装を行う　そしたらソートの実装かな
紐付けを変えるのが楽か　そのために切ったり繋いだりをすればいい

とりあえず引数はスタックにできた
pb とかの操作できるようにするためにpdf読み込む

アペンドを追加する

100こリストを連結させるやつを作る・

連結リストやるか

１０この構造体配列でできるようにするか？
それとも連結リストを先にやるか？

構造体の宣言を全く理解してなかった

双方向循環リストに引数からとるやつをやる

pdf
yyamashi
を完全に理解できるようにする

実装開始

8 7 6 5 4 3 2 1
10 9 8 7 6 5 4 3 2 1
5 4 3 2 1
4 3 2 1
3 2 1
2 1
9 8 7 6 5 4 3 2 1
11 10 9 8 7 6 5 4 3 2 1

問題児
void    sort_rec_b(t_list *a, t_list *b)
こいつを低階層にする

bにpivotの数字に使われた数字しかない場合
永遠に押し付けあっているw
cur->value >= pivot
を
cur->value > pivot
にしたら治った　それらしく機能しているが所々
ソートが聞いていない
まずスタックの表示をどこでやるかを決めようか

関数の階層が深すぎる

finishのやつが複数発生しててだめ
終了条件が適当なんだよね

チャンク認識
フィニッシュしたら新しいチャンクをaから持ってくる
その機能を作る

実装すること
：末尾をaに返す done
：スタック状況表示の改善 ?
まあ、多分できた
：チャンクをbに送るやつ ?
チャンク認識が微妙
出荷する時とかにタグをつける必要がある

コード、重複してないか？
aとbの違いは、スタックのはめ方だけ、うーん・・・

pivotの決め方による計算量の違い

たくさん遊んで覚えるしかない

pivotの決め方がおかしい

three_sortとかどうなってるんだw

結局アルゴリズムを手中におさめられていない
成長以外の目的で何かをやるのは邪悪
目的を目的にしては行けない

まず前整列、数字から、数字のランキングへと換算
それらから適切なpivotを導出

pivot以下の数字をbにプッシュ

結果だけではない　愛が全て

rotateすると、カレンとバリューが違っていますね　どうしましょうか

操作系が多分違ってるから描き直す

本流の設計を考える
pdf見て、資料見て、ノート書く

昨日のよりはいいけど、
１、０が混じる問題あるし依然に
２、終了条件がおかしい
このままスワップでのクイックソートを続けるか、本流実装を試すか
もう本流でいいかな

valueをintにしてみた　なんか影響ありそうだな

１、pivotを決める
２、0はどっからきたんだ？
３、実装再帰させる部分の実装

プッシュ

ばかなソートはできた

何やろうかな

https://programming-place.net/ppp/contents/algorithm/data_struct/005.html

ソート全然分かってなかった
基準値決めて左右に振るやつやってみる

１，readで止める　enter で一手ごと出せるようになる
２，まず入力を受け取って数字を割り振る奴やる
そうするとピボットが決まる
ピボットをもとに割り振る

改善するところ：
１、ファイルを分けるべき　hファイルを作る
=分けた　チェック関数群、動作関係群、メイン＋ソート動作関数群にした

２、raがポインタ返す仕様なのはかなり馬鹿げている気がしてきた
ダミーの位置はずらすべきではないのでカットをすればいい話なのではないのか
＝全てvoidにした

そもそもソート方法の実装をよく理解していない
でも手駒は出来てきた気がする

作り直すか

ソートで使った基準値=pipotを飛ばさないからループし続ける
だからだめなんだね

3つめまでを確定させてastackに追加するまでをやる
そのたまに二個ソートもかく

3つまではできた　からそこからの仕組みを考える

今のローテートの仕様だとダミーの位置が動くから
ra rraした時に外の関数から変更したダミーの位置を教えてもらわなければいけない

再起的なクイックソートを用意する
それと区別する
３以下になるまで飛ばし続ける

pbとpaが別じゃん　統一しろ
統一してたわ

どこまで回す始めるのか、どうやって回すのかが？

それじゃあクイックソートやり始めるか
引数を渡したらそれをbにプッシュ分類

操作する関数に一貫性なさすぎて考えるのがきつい
し理解度も足りていない

is_sortedできた

とりあえずの妄想
三手以内確定をやればできるんじゃないか？
時間とかを気にせずに作る

未来を見てからやるのってすっごいかっこいい
さすがsyamashi

とりあえず書いてみると楽しい

レシピをかく

三個以内の要素を配列するアルゴリズムをつくる
123 0
132 sa ra
231 rra

213 sa
312  ra
321 ra ra

紙に書いても一回頭実装してみる

やっぱりクイックソートを理解していない
もう一回見てみる　bスタックの整理方法がわかってない

実際に書いてやってみる

実装考え、
push_swapの最後尾の数字で対比し続け、下回ったのをbに飛ばす
bの最後尾で対比を繰り返し、ここがわからん

https://note.com/syamashi/n/n602158ffc662

動作の実装を行う　そしたらソートの実装かな
紐付けを変えるのが楽か　そのために切ったり繋いだりをすればいい

とりあえず引数はスタックにできた
pb とかの操作できるようにするためにpdf読み込む

アペンドを追加する

100こリストを連結させるやつを作る・

連結リストやるか

１０この構造体配列でできるようにするか？
それとも連結リストを先にやるか？

構造体の宣言を全く理解してなかった

双方向循環リストに引数からとるやつをやる

pdf
yyamashi
を完全に理解できるようにする

実装開始